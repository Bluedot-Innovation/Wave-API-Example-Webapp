---
    AWSTemplateFormatVersion: 2010-09-09
    
    Parameters:
      Domain:
        Type: String
    
      AppName:
        Type: String
    
      Tag:
        Type: String
    
      EnvironmentName:
        Type: String
    
      EnvironmentNumber:
        Type: String
    
      CertificateArn:
        Type: String
    
      SubDomain:
        Type: String
    
      HostedZoneId:
        Type: String
    
    Resources:
      ########## S3 ##########
      S3Bucket:
        Type: AWS::S3::Bucket
        Properties:
          BucketName: !Sub ${AppName}-${AWS::AccountId}-${EnvironmentName}-${EnvironmentNumber}.${Domain}
          WebsiteConfiguration:
            IndexDocument: index.html
            ErrorDocument: index.html
    
      BucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
          Bucket:
            Ref: S3Bucket
          PolicyDocument:
            Statement:
              - Action:
                  - "s3:GetObject"
                Effect: "Allow"
                Resource: !Sub ${S3Bucket.Arn}/*
                Principal: '*'
      ########## Cloudfront ##########
      OriginAccessIdentity:
        Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
        Properties:
          CloudFrontOriginAccessIdentityConfig:
            Comment: !Sub ${AppName}-${Tag}
    
      CloudfrontDistribution:
        Type: AWS::CloudFront::Distribution
        Properties:
          DistributionConfig:
            HttpVersion: http2
            DefaultRootObject: index.html
            Aliases:
              - !Sub ${SubDomain}.${Domain}
            ViewerCertificate:
              MinimumProtocolVersion: TLSv1.1_2016
              AcmCertificateArn: !Ref CertificateArn
              SslSupportMethod: sni-only
            Origins:
              - DomainName: !Sub ${AppName}-${AWS::AccountId}-${EnvironmentName}-${EnvironmentNumber}.${Domain}.s3.${AWS::Region}.amazonaws.com
                Id: !Sub S3-${AppName}-${AWS::AccountId}-${EnvironmentName}-${EnvironmentNumber}.${Domain}
                S3OriginConfig:
                  OriginAccessIdentity: ''
            CustomErrorResponses:
              - ErrorCode: 404
                ResponseCode: 200
                ResponsePagePath: '/index.html'
              - ErrorCode: 403
                ResponseCode: 200
                ResponsePagePath: '/index.html'
            DefaultCacheBehavior:
              CachedMethods:
                - HEAD
                - GET
                - OPTIONS
              ViewerProtocolPolicy: redirect-to-https
              ForwardedValues:
                QueryString: true
                Cookies:
                  Forward: none
              AllowedMethods:
                - HEAD
                - GET
                - OPTIONS
              TargetOriginId: !Sub S3-${AppName}-${AWS::AccountId}-${EnvironmentName}-${EnvironmentNumber}.${Domain}
            Enabled: true
    
          Tags:
            - Key: Tag
              Value: !Ref Tag
            - Key: AppName
              Value: !Ref AppName
      ########## Route 53 ##########
      Route53:
        Type: AWS::Route53::RecordSet
        Properties:
          AliasTarget:
            DNSName: !GetAtt CloudfrontDistribution.DomainName
            # The hosted zone ID. For load balancers, use the canonical hosted zone ID of the load balancer. For Amazon S3, use the hosted zone ID for your bucket's website endpoint. For CloudFront, use Z2FDTNDATAQYW2. For a list of hosted zone IDs of other services, see the relevant service in the AWS Regions and Endpoints.
            HostedZoneId: Z2FDTNDATAQYW2
          HostedZoneId: !Ref HostedZoneId
          Name: !Sub ${SubDomain}.${Domain}.
          Type: A
    
    Outputs:
      DistributionId:
        Description: AdminConsole Cloudfront DistributionId
        Export:
          Name: !Sub ${AppName}-${AWS::AccountId}-${EnvironmentName}-${EnvironmentNumber}-distribution-id
        Value: !Ref CloudfrontDistribution
    